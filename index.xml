<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Krzysztof Góralski</title>
    <link>https://kgoralski.github.io/index.xml</link>
    <description>Recent content on Krzysztof Góralski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>[Krzysztof Góralski](https://kgoralski.github.io/). Released under the MIT license&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <lastBuildDate>Sun, 04 Sep 2016 10:35:47 +0100</lastBuildDate>
    <atom:link href="https://kgoralski.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go Language - First Impressions</title>
      <link>https://kgoralski.github.io/post/go-impressions/</link>
      <pubDate>Sun, 04 Sep 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/go-impressions/</guid>
      <description>&lt;p&gt;Just wrote something small with Go Language. Simple CRUD/webservice with MySQL using gorilla mux and sqlx, but it is almost plain golang in dockerized environment. If anything wrong about it, tell me. If you know polish language you can check also this link: &lt;a href=&#34;http://www.consdata.pl/blog/12-pirewsze-kroki-z-golang&#34;&gt;http://www.consdata.pl/blog/12-pirewsze-kroki-z-golang&lt;/a&gt; ;)&lt;/p&gt;

&lt;p&gt;Here are my impressions about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it feels pragmatic from the beginning&lt;/li&gt;
&lt;li&gt;probably you don’t need any frameworks at all to use it&lt;/li&gt;
&lt;li&gt;simpler = better, simplicity as a feature&lt;/li&gt;
&lt;li&gt;quite easy to write REST application&lt;/li&gt;
&lt;li&gt;the build in package manager ‘go get’ is cool thing&lt;/li&gt;
&lt;li&gt;compilation &amp;amp; running time of go server is much faster than java&lt;/li&gt;
&lt;li&gt;it doesn’t eat much of resources&lt;/li&gt;
&lt;li&gt;you can use many text editors or IDEs for it (IntelliJ has Go Plugin)&lt;/li&gt;
&lt;li&gt;gofmt – one and the only code formatter&lt;/li&gt;
&lt;li&gt;designed for special needs, not for everything&lt;/li&gt;
&lt;li&gt;it is easy to find examples by googling it, good enough community&lt;/li&gt;
&lt;li&gt;return multiple values from Go functions – nice feature&lt;/li&gt;
&lt;li&gt;syntax not beautiful like Python but still good&lt;/li&gt;
&lt;li&gt;the build in ‘testing’ package – ok, but too simple (testify looks better)&lt;/li&gt;
&lt;li&gt;concurrency – believe that it is nice, but didn’t tried it yet&lt;/li&gt;
&lt;li&gt;it is much different than Scala – complexity vs simplicity&lt;/li&gt;
&lt;li&gt;I think that I could be very productive with Go if i will get used to it&lt;/li&gt;
&lt;li&gt;Docker, Kubernetes, CoreOs,  Consul, Flynn, Lime, Google, Dropbox…&lt;/li&gt;
&lt;li&gt;heard that golang is good for ‘real time apps’ – want to try it soon&lt;/li&gt;
&lt;li&gt;it seems to be good for building command-line tools&lt;/li&gt;
&lt;li&gt;it is different than Java, little bit tricky at beginning, but easy to start ;)&lt;/li&gt;
&lt;li&gt;‘good when you need to write something yourself instead of using library’&lt;/li&gt;
&lt;li&gt;need to find idea for real project, because I kinda like Go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Links:
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://danmux.com/posts/what_golang_isnt/&#34;&gt;What Golang Is and Is Not&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://jimplush.com/talk/2015/12/19/moving-a-team-from-scala-to-golang/&#34;&gt;Moving a team from Scala to Golang&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/&#34;&gt;Handling 1 Million Requests per Minute with Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://text.sourcegraph.com/google-i-o-talk-building-sourcegraph-a-large-scale-code-search-cross-reference-engine-in-go-1f911b78a82e#.jd729lgy5&#34;&gt;Sourcegraph, a large-scale code search &amp;amp; cross-reference engine in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://medium.com/@tjholowaychuk/farewell-node-js-4ba9e7f3e52b#.o6e4uex72&#34;&gt;Farewell Node.js - Leaving node.js land for Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://hashrocket.com/blog/posts/websocket-shootout&#34;&gt;Websocket Shootout: Clojure, C++, Elixir, Go, NodeJS, and Ruby&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JOx9enktnUM&#34;&gt;Go at Dropbox&lt;/a&gt; and &lt;a href=&#34;https://www.bigmarker.com/remote-meetup-go/Go-at-Dropbox&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jpetazzo/docker-and-go-why-did-we-decide-to-write-docker-in-go&#34;&gt;Here&amp;rsquo;s Why Docker Was Written in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/appleboy/write-microservice-in-golang&#34;&gt;Write microservice in golang&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://zduck.com/2014/go-and-package-versioning/&#34;&gt;Go and Package Versioning&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://allegro.tech/2016/03/writing-fast-cache-service-in-go.html&#34;&gt;allegro.tech - Writing a cache service with millions of entries in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://eng.uber.com/go-geofence/&#34;&gt;Uber &amp;amp; Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/faq#What%5Fis%5Fthe%5Fpurpose%5Fof%5Fthe%5Fproject&#34;&gt;What is the purpose of Go project?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/golang/go/wiki/GoUsers&#34;&gt;GoUsers&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.itjobswatch.co.uk/jobs/uk/go.do&#34;&gt;Go UK Jobs Watch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.indeed.com/jobtrends/q-golang.html&#34;&gt;indeed job trends&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-future-of-the-Go-programming-language&#34;&gt;What is the future of the Go programming language?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.quora.com/Why-is-the-programming-language-GO-getting-so-popular-lately&#34;&gt;Why is the programming language GO getting so popular lately?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.ralch.com/tutorial/golang-performance-and-memory-analysis/&#34;&gt;Performance and memory analysis of Golang programs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.savethecode.com/racing-day-web-frameworks/&#34;&gt;Web Frameworks Benchmarks&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://opencredo.com/java-go-back/&#34;&gt;From Java to Go, and Back Again&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/golang/comments/579wsk/from_java_to_go_and_back_again/?&#34;&gt;community reaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Univocity Parsers Library</title>
      <link>https://kgoralski.github.io/post/univocity-parsers/</link>
      <pubDate>Thu, 25 Aug 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/univocity-parsers/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.univocity.com/&#34;&gt;Official Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/com.univocity/univocity-parsers&#34;&gt;Maven Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below you can find how to parse .csv file with univocity library.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class ExampleCsvToPojoParser {
   
    private final Logger logger = LoggerFactory.getLogger(CsvToPojoParser.class);
   
    public &amp;lt;T&amp;gt; List&amp;lt;T&amp;gt; parseFileToPojo(Class&amp;lt;T&amp;gt; clazz, String fileName) {
   
        BeanListProcessor&amp;lt;T&amp;gt; rowProcessor = new BeanListProcessor&amp;lt;T&amp;gt;(clazz);
   
        CsvParserSettings parserSettings = new CsvParserSettings();
   
        parserSettings.setRowProcessor(rowProcessor);
        parserSettings.setHeaderExtractionEnabled(true);
        parserSettings.setLineSeparatorDetectionEnabled(true);
        parserSettings.setSkipEmptyLines(true);
   
        CsvParser parser = new CsvParser(parserSettings);
        try (InputStream resourceAsStream = this.getClass().getClassLoader().getResourceAsStream(fileName)) {
            parser.parse(resourceAsStream);
        } catch (IOException e) {
            logger.error(&amp;quot;Cannot read file &amp;quot; + fileName, e );
        }
        return rowProcessor.getBeans();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can put there class like this (which will match the file):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Users {
   
    @Trim
    @NullString(nulls = { &amp;quot; &amp;quot;, &amp;quot;&amp;quot; })
    @Parsed(field = &amp;quot;USER_ID&amp;quot;)
    private Long userId;
    @Trim
    @NullString(nulls = { &amp;quot; &amp;quot;, &amp;quot;&amp;quot; })
    @Parsed(field = &amp;quot;USER_NAME&amp;quot;)
    private String userName;
    //getters &amp;amp; setters
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My programming books</title>
      <link>https://kgoralski.github.io/post/job-change/</link>
      <pubDate>Sun, 31 Jul 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/job-change/</guid>
      <description>&lt;p&gt;My current, unordered book list but I wasn’t able to read them all, yet.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Core Java, Volume I and II; Horstmann&lt;/li&gt;
&lt;li&gt;Thinking in Java; Eckel&lt;/li&gt;
&lt;li&gt;OCA/OCP Java SE 7 Programmer I &amp;amp; II Study Guide; Sierra &amp;amp; Bates&lt;/li&gt;
&lt;li&gt;Effective Java; Bloch&lt;/li&gt;
&lt;li&gt;Java Concurrency in Practice; Goetz&lt;/li&gt;
&lt;li&gt;Spring Boot in Action; Walls&lt;/li&gt;
&lt;li&gt;Java EE 7 Development with WildFly; Ćmil, Matłoka, Marchioni&lt;/li&gt;
&lt;li&gt;The C Programming Language; Kernighan, Ritchie&lt;/li&gt;
&lt;li&gt;The C++ Programming Language; Stroustrup&lt;/li&gt;
&lt;li&gt;Effective Modern C++; Meyers&lt;/li&gt;
&lt;li&gt;Learning Python: Powerful Object-Oriented Programming; Lutz&lt;/li&gt;
&lt;li&gt;Scala for the Impatient; Horstmann&lt;/li&gt;
&lt;li&gt;Functional Programming in Scala; Chiusano, Bjarnason&lt;/li&gt;
&lt;li&gt;Seven Languages in Seven Weeks, Tate&lt;/li&gt;
&lt;li&gt;Algorithms Unlocked, Cormen&lt;/li&gt;
&lt;li&gt;Introduction to Algorithms, Cormen&lt;/li&gt;
&lt;li&gt;Design Patterns; Gang of Four&lt;/li&gt;
&lt;li&gt;Head First, Design Patterns; Sierra, Robson, Bates &amp;amp; Freeman&lt;/li&gt;
&lt;li&gt;Clean Code; Martin&lt;/li&gt;
&lt;li&gt;The Pragmatic Programmer; Hunt&lt;/li&gt;
&lt;li&gt;The Software Craftsman: Professionalism, Pragmatism, Pride; Mancuso&lt;/li&gt;
&lt;li&gt;The Go Programming Language, Donovan &amp;amp; Kernighan&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Wildfly CRUD example with Docker</title>
      <link>https://kgoralski.github.io/post/wildfly-crud-docker/</link>
      <pubDate>Sun, 31 Jul 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/wildfly-crud-docker/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m not that familiar with pure Java EE stack. My experience is mostly mixing Java EE with Spring. So, I just wanted to play with it. You can find it here:
&lt;a href=&#34;https://github.com/kgoralski/wildfly-template&#34;&gt;&lt;a href=&#34;https://github.com/KrzysztofGoralski/wildfly-template&#34;&gt;https://github.com/KrzysztofGoralski/wildfly-template&lt;/a&gt;
&lt;/a&gt;
Java EE
JAX-RS - RESTEasy
Apache Deltaspike (similiar to Spring Data)
H2 Database
Docker
Maven&lt;/p&gt;

&lt;p&gt;It is just an example and far from real application. It will be required to add tests for sure and it would be interesting to do it this way:
&lt;a href=&#34;http://blog.arungupta.me/run-javaee-tests-wildfly-docker-arquillian-cube/&#34;&gt;Docker with Arquillian Cube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install Docker first&amp;hellip; I&amp;rsquo;m using Intellij IDEA Ultimate, to add docker to this IDE:
1. File-&amp;gt; Settings-&amp;gt; Builds, Executions, Deployment -&amp;gt; Clouds
2. Add Docker with API URL = unix:///var/run/docker.sock&lt;/p&gt;

&lt;p&gt;My dockerfile is simple and using jboss/wildfly image.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;FROM jboss/wildfly
ADD target/wildfly-template.war /opt/jboss/wildfly/standalone/deployments/
RUN /opt/jboss/wildfly/bin/add-user.sh admin Admin#70365 --silent
CMD [&amp;quot;/opt/jboss/wildfly/bin/standalone.sh&amp;quot;, &amp;quot;-b&amp;quot;, &amp;quot;0.0.0.0&amp;quot;, &amp;quot;-bmanagement&amp;quot;, &amp;quot;0.0.0.0&amp;quot;]
EXPOSE 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run it:
1. Run -&amp;gt; Run&amp;hellip; -&amp;gt; Edit Configurations
2. Add Docker deployment
3. Add image tag and container name in Deployment Tab
4. Generate new container_settings.json in Container tab
5. Run it :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>akka-http-slick-guice example</title>
      <link>https://kgoralski.github.io/post/akka-http-slick-guice/</link>
      <pubDate>Tue, 03 May 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/akka-http-slick-guice/</guid>
      <description>&lt;p&gt;Forked from &lt;a href=&#34;https://github.com/knoldus/akka-http-slick&#34;&gt;https://github.com/knoldus/akka-http-slick&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Changes:
&lt;ul&gt;
    &lt;li&gt;Guice added&lt;/li&gt;
    &lt;li&gt;Changed Routes to Get, Put, Post, Delete&lt;/li&gt;
    &lt;li&gt;Changed urls&lt;/li&gt;
    &lt;li&gt;Changed Json Parser from Lift to akka-http/Spray one&lt;/li&gt;
    &lt;li&gt;Some fixes&lt;/li&gt;
&lt;/ul&gt;
Check example here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.lightbend.com/activator/template/akka-http-slick-guice&#34;&gt;https://www.lightbend.com/activator/template/akka-http-slick-guice&lt;/a&gt;
&lt;a href=&#34;https://github.com/kgoralski/akka-http-slick-guice&#34;&gt;https://github.com/kgoralski/akka-http-slick-guice&lt;/a&gt;
&lt;ul&gt;
    &lt;li&gt;akka-http : REST&lt;/li&gt;
    &lt;li&gt;slick : database access &amp;amp; relational mapping&lt;/li&gt;
    &lt;li&gt;guice: dependency injection&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spring &amp; Guava Cache</title>
      <link>https://kgoralski.github.io/post/spring-guava-cache/</link>
      <pubDate>Wed, 09 Mar 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/spring-guava-cache/</guid>
      <description>&lt;p&gt;Check the excellent guide &lt;a href=&#34;http://codedevstuff.blogspot.com/2015/07/add-guava-cache-to-spring-boot-to-cache.html&#34;&gt;here&lt;/a&gt; about Cache in Spring. Below you can find similar code. Also check the official &lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// compile (&#39;org.springframework:spring-context-support:4.0.7.RELEASE&#39;)
@Configuration
@EnableCaching
public class CacheConfig implements CachingConfigurer {
 
    public final static String CACHE = &amp;quot;cache&amp;quot;;
 
    private static final Logger LOGGER = LoggerFactory.getLogger(CacheConfig.class);
 
    @Bean
    @Override
    public CacheManager cacheManager() {
        LOGGER.info(&amp;quot;Initializing simple Guava Cache manager.&amp;quot;);
        SimpleCacheManager cacheManager = new SimpleCacheManager();
        GuavaCache discoveryCache = new GuavaCache(CACHE,
                CacheBuilder.newBuilder().expireAfterWrite(60, TimeUnit.MINUTES).build());
        cacheManager.setCaches(Arrays.asList(discoveryCache));
        return cacheManager;
    }
 
    @Bean
    @Override
    public KeyGenerator keyGenerator() {
        return new SimpleKeyGenerator();
    }
 
}
// mark method with @Cacheable annotation
@Component
public class CacheService {
 
    @Inject
    private BooksService bookService;
 
    @Cacheable(CacheConfig.CACHE)
    public List&amp;lt;Book&amp;gt; getBooks() {
        return bookService.getBooks();
    }
}
 
// You can clear cache like this
@Controller
@RequestMapping(&amp;quot;/&amp;quot;)
public class ClearCacheController {
 
    @CacheEvict(value = CacheConfig.CACHE, allEntries = true)
    @RequestMapping(value = &amp;quot;/clearCache&amp;quot;, method = RequestMethod.GET)
    public ResponseEntity&amp;lt;String&amp;gt; clearCache() {
        return new ResponseEntity&amp;lt;String&amp;gt;(&amp;quot;Cache Cleared&amp;quot;, HttpStatus.OK);
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RxJava Basics</title>
      <link>https://kgoralski.github.io/post/rxjava-basics/</link>
      <pubDate>Sun, 28 Feb 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/rxjava-basics/</guid>
      <description>&lt;p&gt;Inspired by &lt;a href=&#34;http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/&#34;&gt;Grokking RxJava Tutorial&lt;/a&gt; check the code snippet below, in this post or check it here &lt;a href=&#34;http://pastebin.com/9MR4k5E5&#34;&gt;http://pastebin.com/9MR4k5E5&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package org.rx.java.tutorial;

import java.util.ArrayList;
import java.util.List;

import rx.Observable;
import rx.Subscriber;
import rx.functions.Func1;

public class Main {

	// Check this tutorial:
	// http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/

	// Dependency for gradle project:
	// compile &#39;io.reactivex:rxjava:1.1.1&#39;

	// ====================================================================

	// Key idea #1: Observable and Subscriber can do anything.

	// Key idea #2: The Observable and Subscriber are independent of the
	// transformational steps in between them.

	// Key idea #3: Operators let you do anything to the stream of data. The
	// only limit is yourself.

	// ====================================================================

	// Notes:
	// 1. onError() is called if an Exception is thrown at any time.
	// 2. The operators don&#39;t have to handle the Exception.
	// 3. You know when the Subscriber has finished receiving items.
	// 4. When you call Observable.subscribe(), it returns a Subscription.
	// 5. RxJava has awesome docs / marble diagrams inside code
	// 6. using unsubscribe will terminate wherever it is currently executing
	// code
	// 7. List of operators:
	// https://github.com/ReactiveX/RxJava/wiki/Alphabetical-List-of-Observable-Operators

	public static void main(String[] args) {

		// 1. verbose example
		Observable&amp;lt;String&amp;gt; myObservable = Observable.create(new Observable.OnSubscribe&amp;lt;String&amp;gt;() {
			public void call(Subscriber&amp;lt;? super String&amp;gt; sub) {
				sub.onNext(extracted());
				sub.onCompleted();
			}

			private String extracted() {
				return &amp;quot;1. Hello, world!&amp;quot;;
			}
		});

		Subscriber&amp;lt;String&amp;gt; mySubscriber = new Subscriber&amp;lt;String&amp;gt;() {
			public void onCompleted() {
				System.out.println(&amp;quot;1. the end&amp;quot;);
			}

			public void onError(Throwable e) {
				System.out.println(&amp;quot;error&amp;quot;);
			}

			public void onNext(String s) {
				System.out.println(s);
			}
		};
		myObservable.subscribe(mySubscriber);

		// 2. almost same thing as above
		Observable.just(&amp;quot;2. Hello, world!&amp;quot;).subscribe(s -&amp;gt; System.out.println(s + &amp;quot;-Krzysztof&amp;quot;));

		// 3. map operator - transforming
		Observable.just(&amp;quot;3. Hello, world!&amp;quot;).map(s -&amp;gt; s + &amp;quot;-Krzysztof&amp;quot;)
				.subscribe(s -&amp;gt; System.out.println(s));
				// http://reactivex.io/documentation/operators/map.html

		// 4. subscriber receive Integer
		Observable.just(&amp;quot;4. Hello, world!&amp;quot;).map(s -&amp;gt; s.hashCode())
				.subscribe(i -&amp;gt; System.out.println(&amp;quot;4. &amp;quot; + Integer.toString(i)));

		// 5. subscriber shouldn&#39;t have much logic so...
		Observable.just(&amp;quot;5. Hello, world!&amp;quot;).map(s -&amp;gt; s.hashCode()).map(i -&amp;gt; Integer.toString(i))
				.subscribe(s -&amp;gt; System.out.println(&amp;quot;5. &amp;quot; + s));

		// 6. some transformations
		Observable.just(&amp;quot;6. Hello, world!&amp;quot;).map(s -&amp;gt; s + &amp;quot; -Krzysztof&amp;quot;).map(s -&amp;gt; s.hashCode())
				.map(i -&amp;gt; Integer.toString(i)).subscribe(s -&amp;gt; System.out.println(&amp;quot;6. &amp;quot; + s));

		List&amp;lt;String&amp;gt; arrayList = new ArrayList&amp;lt;String&amp;gt;();
		arrayList.add(&amp;quot;Krzysztof&amp;quot;);
		arrayList.add(&amp;quot;Karol&amp;quot;);
		arrayList.add(&amp;quot;Irek&amp;quot;);

		// 7. from operator emits one element each time
		Observable.just(arrayList).subscribe(names -&amp;gt; {
			Observable.from(names).subscribe(name -&amp;gt; System.out.println(&amp;quot;7. Name: &amp;quot; + name));
		});
		// http://reactivex.io/documentation/operators/from.html

		// 8. list observable transformed into observable which emits single
		// result with after change name, filtering and taking entry at the end
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; !&amp;quot;Karol is awesome&amp;quot;.equals(nameChange)).take(1)
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;8. &amp;quot; + result + &amp;quot;- this is the result&amp;quot;));
				// http://reactivex.io/documentation/operators/flatmap.html

		// 9. doOnNext() allows us to add extra behavior each time an item is
		// emitted, in this case singing &#39;lalala&#39;
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; !&amp;quot;Irek is awesome&amp;quot;.equals(nameChange)).take(1)
				.doOnNext(nameChange -&amp;gt; System.out.println(&amp;quot;9. lalalla&amp;quot;))
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;9. &amp;quot; + result + &amp;quot;- this is the result&amp;quot;));
				// http://reactivex.io/documentation/operators/filter.html
				// http://reactivex.io/RxJava/javadoc/rx/Observable.html#doOnNext(rx.functions.Action1)

		// 10. error example
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; getError(nameChange).equals(&amp;quot;anything&amp;quot;)).take(1)
				.doOnNext(nameChange -&amp;gt; System.out.println(&amp;quot;10. lalalla&amp;quot;))
				.onErrorReturn(new Func1&amp;lt;Throwable, String&amp;gt;() {
					@Override
					public String call(Throwable t) {
						return &amp;quot;error&amp;quot;;
					}
				})
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;10. &amp;quot; + result + &amp;quot; - this is the result&amp;quot;));

		// 11. Schedulers: easy threading
		// myObservableServices.retrieveImage(url)
		// .subscribeOn(Schedulers.io())
		// .observeOn(AndroidSchedulers.mainThread())
		// .subscribe(bitmap -&amp;gt; myImageView.setImageBitmap(bitmap));

		// subscribeOn(Scheduler scheduler): Asynchronously subscribes Observers
		// to this Observable on the specified Scheduler.

		// observeOn(Scheduler scheduler): Modifies an Observable to perform its
		// emissions and notifications on a specified Scheduler, asynchronously
		// with a bounded buffer.

		// check: http://reactivex.io/documentation/operators/subscribeon.html

	}

	private static String getError(String name) {
		throw new RuntimeException();
	}

	// OUTPUT:
	// 1. Hello, world!
	// 1. the end
	// 2. Hello, world!-Krzysztof
	// 3. Hello, world!-Krzysztof
	// 4. -1028118321
	// 5. -1538652498
	// 6. -1846029788
	// 7. Name: Krzysztof
	// 7. Name: Karol
	// 7. Name: Irek
	// 8. Krzysztof is awesome- this is the result
	// 9. lalalla
	// 9. Krzysztof is awesome- this is the result
	// 10. error - this is the result

}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Job change</title>
      <link>https://kgoralski.github.io/post/books/</link>
      <pubDate>Mon, 31 Aug 2015 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/books/</guid>
      <description>&lt;p style=&#34;text-align:justify;&#34;&gt;&lt;strong&gt;Updated. Poniżej również tekst &#34;po roku pracy&#34;.&lt;/strong&gt;&lt;/p&gt;
Old stuff. Poniższy tekst został napisany w styczniu 2015 (a pracuję od maja 2015), w momencie kiedy miałem silne postanowienie zmiany pracy by zostać programistą. Zacząłem się uczyć na początku 2014 r. Z perspektywy czasu, powiem: Warto. Nie ma drogi na skróty. Chcieć to móc. Motywacja jest bardzo ważna, a może najważniejsza. Zacznij się uczyć. A piszę to dlatego, bo zauważyłem, że jest spore zainteresowanie tematem. Przede wszystkim, odpowiedz sobie na to bardzo ważne &lt;a href=&#34;https://www.youtube.com/watch?v=Ybq2iTT25bY&#34;&gt;pytanie&lt;/a&gt;.
&lt;p style=&#34;text-align:justify;&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;&#34;Postanowiłem się podzielić w jaki sposób ja zamierzam się przebranżowić, być może ułatwi to sprawę pytającym. Może ktoś skorzysta.&lt;/p&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;Słowem wstępu. Mam 29 lat. Pracuję w innej branży. W ostatnim roku zacząłem szukać informacji jak się przebranżowić, wiele czytałem, gromadziłem informacje. Zacząłem też się uczyć i próbować wielu rzeczy, robić proste projekty, próbując wymyślić co mi bardziej będzie pasować a co nie. Nie mam komfortowej sytuacji, że mogę rzucić wszystko i zacząć coś innego ale staram się, żeby była jak najbardziej komfortowa. Przyszło też załamanie, z powodów osobistych a także nieco sytuacji finansowej (w zasadzie źle nie zarabiam, tylko miałem spore wydatki i po prostu zastanawiałem się czy podołam). Mimo to nie zrezygnowałem z pomysłu. Muszę spróbować bo nie da mi to spokoju. W zasadzie to w pomyśle nikt mnie nie popiera. Na przekór wszystkim mnie do tego ciągnie i nic na to nie poradzę. Mimo to wiele rzeczy z IT mnie interesuje, nie tylko programowanie. Niestety nie posiadam znajomych, którzy się tym trudnią. Z początku myślałem o tym czysto hobbystycznie, ale wkręcam się coraz bardziej. Nie, nie boję się, że jestem za stary.&lt;/p&gt;
&lt;strong&gt;Moje działania&lt;/strong&gt; zanim stworzyłem konkretny plan (niekoniecznie po kolei):
&lt;ol&gt;
    &lt;li&gt;Szukanie i gromadzenie informacji - książki, kursy, tutoriale, ciekawe wpisy ludzie z doświadczeniem, wykłady, listy projektów itp.&lt;/li&gt;
    &lt;li&gt;Wykorzystanie wszystkich możliwości jakie mam w obecnej pracy by przekuć to na zalety (np. mogłem iść chociaż na szkolenie z SQL)&lt;/li&gt;
    &lt;li&gt;Przygotowanie sobie środowiska pracy, IDE, komputer, zahaczając o linuxa itp. - może złej baletnicy przeszkadza rąbek od spódnicy - ale ja się uczę po godzinach, w wolnych chwilach - na razie, więc wyeliminowanie wszystkich możliwych denerwujących aspektów działa na plus.&lt;/li&gt;
    &lt;li&gt;Zdecydowanie się na technologię i zastanowienie się co chciałbym robić - było trochę Pythona, ostatecznie Java - co dokładnie chciałbym robić w sumie to jeszcze nie wiem, póki co nie tracę zainteresowania, a im więcej rzeczy poznaje to ta droga może się zmieniać. (nie wykluczam poznania innych języków, ale na razie zostaję przy Java)&lt;/li&gt;
    &lt;li&gt;Oczywiście nauka w wolnych chwilach: weekendy, w tygodniu po godz. 17:00 - wygospodarować sobie czas, zrobić plan dnia&lt;/li&gt;
    &lt;li&gt;Liczne rozważania, wzloty, upadki, tracenie motywacji itp. Wniosek: potrzebowałem kopa w dupę.&lt;/li&gt;
    &lt;li&gt;Pewnie większość uzna, że to śmieszne, sam tak uważałem, ale stwierdziłem, że &#34;co mi szkodzi?&#34;. -&gt; Tym kopem był doradca zawodowy z agencji rekruterskiej, która głównie rekrutuje stanowiska IT. Potrzebowałem usłyszeć &#34;dasz radę&#34;, &#34;jakie możliwości, plany A i B&#34;, &#34;jak efektywnie podejść do zmiany zawodu&#34;, &#34;jak pracodawca będzie na mnie patrzył&#34;, &#34;co zmienić w CV&#34;. - Tutaj widać jak motywacja jest ważna. Nie miałem wiary w siebie i starczyło, żeby ktokolwiek powiedział mi &#34;dasz radę&#34; i jakoś to poszło.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;No to mam swój &lt;strong&gt;Plan A&lt;/strong&gt; (został nakreślony w styczniu 2015) - co zrobić by zacząć pracę jako programista Java:&lt;/p&gt;

&lt;p&gt;&lt;ol&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Wrócić do systematycznej nauki i praktycznego kodowania -&amp;gt; własne projekty &amp;amp; zacząć coś open source (bo miałem przerwę) - to obejmuje również wymyślanie własnych, coraz bardziej sensownych projektów&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Zapisać się do lokalnych organizacji, chodzić na konferencje oraz targi pracy -&amp;gt; trochę zaznajomić się ze środowiskiem&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Opracować dokumenty aplikacyjne oraz konta społecznościowe jak linkedin i goldenline w kierunku stanowiska programisty i pozostać tam aktywnym&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Stworzyć listę interesujących firm z mojej lokalizacji&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Mailing -&amp;gt; stworzyć interesującą, nie za długą wiadomość e-mail opisującą trochę moją sytuację oraz chęć nauki i pracy i zacząć rozsyłać do firm&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Dalej przeglądać oferty pracy i staży. Może szukać firm, które realizują projekty dla firm z mojej obecnej branży&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Szukać stażu/praktyk itp., pierwszych doświadczeń, które można wpisać do CV, jeśli się zdarzy rzucić obecną pracę i poświęcić duże ilości czasu na pracę oraz naukę po godzinach pracy&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Iść na studia podyplomowe + certyfikat OCA/OCP Java - to był punkt, którego pewien nie byłem, rozważałem też zaoczną Infę albo nic nie robić. Przejrzałem ofertę tych studiów podyplomowych, podoba mi się tematyka (bardziej ogólny kierunek niż sama Java), prowadzący to chyba głównie praktycy, więc na plus. I jedna z zalet takich studiów, poznanie środowiska i może właściwych ludzi, którzy pomogą pchać to dalej. Certyfikat zobaczę jak obrócą się sprawy - przynajmniej jest tani. Aha mam zaoszczędzoną kasę i to też jest argument by zrobić te studia. I to bardziej &amp;ldquo;dla siebie&amp;rdquo; niż dla papiera.&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;W jakiś wolnych chwilach np. czekając gdzieś mieć ze sobą jakąś książkę np. &amp;ldquo;clean code&amp;rdquo; i coś sobie czytać&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Być może stworzyć bloga o programowaniu lub własną stronę jako swoje CV czy cokolwiek w ten deseń&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Dostać się na stanowisko Junior Java Developer&lt;/li&gt;
    &lt;li style=&#34;text-align:justify;&#34;&gt;Na bazie doświadczenia opracować ścieżkę dalszego rozwoju: Android, Web itp. itd. Wiele z tych punktów robić jednocześnie. Generalnie to zrobić jak najwięcej w krótkim czasie, by nieco nadrobić stracony czas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;Oczywiście to jest coś co ja będę się starał realizować. Wierzę, że dla innych może zadziałać coś innego.&amp;rdquo;&lt;/p&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;Ps. Nie wszystkie z tych punktów zostąły spełnione np. na studia i na certyfikat ostatecznie nie poszedłem :)&lt;/p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;&lt;strong&gt;UPDATE. Po roku pracy:&lt;/strong&gt;&lt;/p&gt;
Jest dobrze, mocno do przodu, mój obecny stack to mniej więcej coś takiego:
Spring Framework (Spring DI, Spring Boot, Spring Data, Spring Security, Spring MVC)
Elementy JEE
Hibernate, JPA, Jersey, Rest, Guava
TDD, JUnit, Mockito, Spock
Eclipse/IntelliJ, Git, Gradle, Groovy, Jenkins
DB: MySQL, Oracle
+ trochę Scala i akka-http

&lt;hr /&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;Kiedyś napisałem dla kogoś tekst odnośnie &#34;motywacji ludzi, którzy chcą się przebranżowić&#34;. Może to komuś pomoże.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;p style=&#34;text-align:justify;&#34;&gt;Ogólnie jakbym miał kiedyś o tym robić prezentację to zaczynałbym od tego:&lt;/p&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9O-ZI0Kzttg&#34;&gt;https://www.youtube.com/watch?v=9O-ZI0Kzttg&lt;/a&gt; Scena z Laską z filmu Chłopaki nie Płaczą.&lt;/p&gt;
Chciałem napisać krótko a i tak wyszło dużo. Będzie Wall of text, a mógłbym napisać więcej.
Poniżej pytania jakie otrzymywałem, myślę, że to naświetli problem.Zresztą po tych pytaniach raczej widać, że kłopoty w przebranżowieniu nie leżą w samej nauce programowania, tylko gdzie indziej.
&lt;p style=&#34;text-align:justify;&#34;&gt;&lt;span style=&#34;text-decoration:underline;&#34;&gt;Czemu ludzie chcą zostać programistami?&lt;/span&gt;
Głównie dlatego, że chcą robić coś ciekawego. Generalnie większość takich osób jest w podobnym wieku co ja 29-30 lat. Ci młodsi by się przebranżowić wielkich kłopotów raczej nie mają. Mam wrażenie, że jak dawno temu byliśmy głupi i młodzi to wydawało nam się, że na jakiekolwiek studia nie pójdziemy to będzie dobrze. Rzeczywistość to weryfikuje. Wydaje mnie się, że często to są ludzie ambitni, którzy się duszą bo nie mogą się w żaden sposób realizować zawodowo.&lt;/p&gt;
W innej branży bardzo szybko można popaść w rutynę i łatwo osiągnąć szklany sufit możliwości, realizacji siebie czy zarobków. Wtedy jak się pomyśli, że będzie się tak pracować X lat, to się rzygać chce. &amp;ldquo;znowu do tej roboty&amp;rdquo;. IT to jest cały czas coś nowego, wiele ścieżek rozwoju, nawet jeśli pracodawca nas blokuje to można się uczyć czegoś nowego. Mi osobiście średnio pasowała realizacja siebie w sferze bardziej biznesowej.&lt;/p&gt;

&lt;p&gt;Część ludzi chyba chce dlatego, że słyszała, że programiści dużo zarabiają. Według mnie jest to skazane na porażkę. Myślę, że są łatwiejsze sposoby na zarabianie a programowanie trzeba chociaż trochę lubić.&lt;/p&gt;

&lt;p&gt;Część ludzi też chce być &amp;ldquo;kimś&amp;rdquo; i robić coś &amp;lsquo;konkretnego&amp;rdquo;.
&lt;p style=&#34;text-align:justify;&#34;&gt;&lt;span style=&#34;text-decoration:underline;&#34;&gt;Ogólnie wyszczególniłbym kilka najważniejszych problemów przy realizacji celu:&lt;/span&gt;
1) Motywacja - numer jeden. Motywacja, chęci, determinacja są najważniejsze.
a) Głównym problemem tutaj jest to, że ludzie zamiast widzieć cel widzą same problemy, przez co nie skupiają się na programowaniu, na pisaniu linii kodu, tylko na np. A czy pisać pod Windowsem czy linuksem? Czy w Eclipse czy w Netbeans? Czy klawiatura taka i taka starczy czy może powinienem mieć większy monitor? Jaki język wybrać? itp. - Człowiek piętrzy problemy, które są tak naprawdę nieistotne.
2) Wiara w siebie - W sumie można by połączyć to z powyższym. Osobiście nie miałem za bardzo wsparcia w realizacji celu, nie mogłem sobie też pozwolić na to, żebym nie miał źródeł dochodu, więc musiałem jednocześnie pracować i się uczyć. Brak czasu wolnego. Ogólnie to samo nic nie przyjdzie, trzeba wykonać kawał ciężkiej roboty. W moim przypadku 1 osoba powedziała mi : You can do it i to wystarczyło.
3) Czas - bez czasu poświęconego na naukę nic z tego nie będzie. Warto nakreślić sobie plan działania, albo nawet plan A i plan B (sam myślałem alternatywnie by zacząć od testera czy jakiegoś wdrożeniowca, gdzie będzie potrzebna wiedza biznesowa), starać się realizować punkty planu, żeby mieć jakiś progress. U mnie w zasadzie działało to na zasadzie &amp;ldquo;uczę się kiedy tylko mogę&amp;rdquo;. Łączy się z tym kwestia &amp;ldquo;sytuacji życiowej&amp;rdquo;. Wiek też robi swoje, im jesteśmy starsi tym więcej obowiązków.&lt;/p&gt;
&lt;p style=&#34;text-align:justify;&#34;&gt;Wydaje mnie się, że wiele osób szuka w necie potwierdzenia, że się da, przypadki ludzi, którym się udało ich motywują. Sam też najpierw takiego potwierdzenia szukałem.&lt;/p&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Przeszkody jakie ludzie widzą:&lt;/span&gt;
Ludzie boją się, że nie podołają, że jest za późno, że są za starzy, że ich sytuacja życiowa na to nie pozwoli, że są za głupi, bo programowanie to czarna magia, że nie mają czasu, że za wiele trudu trzeba wykonać na początek, bo sufit się zwali na głowę. itp. Większość to wymówki. Czemu tak pisze, bo sam nie miałem komfortowej sytuacji tylko musiałem zwyczajnie zaryzykować i postawić wszystko na jedną kartę. Co łatwe nie było.
&lt;p style=&#34;text-align:justify;&#34;&gt;Pytania jakie mi zadawano (dużo pytań tego typu dostałem):
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Pytania: &amp;ldquo;Jak się uczyć?&amp;rdquo;:&lt;/span&gt;
-Długo się uczysz już javy? - Uczyłem się rok od Pythona przez Javę, po godzinach z przerwami, później dostałem pracę.
-Jak rozkladales czas po pracy na nauke? Ile godzin dziennie? - Ile mogłem to sięuczyłem
-Jak wygladalo twoje podejscie do nauki? Jak sie uczyles? Przepisywales kod z ksiazki i pozoniej modyfikowales i pisales sam czy jak? - Wszyskie sposoby, obecnie książek mam wiele. Newslettery do mnie spływają na bieżąco, szukam nowych wyzwań cały czas
-Mam pytanie odnośnie tego ile czasu może zająć nauka programowania aby podjąć pierwszą pracę albo chociaż staż? - U każdego będzie różnie, według mnie najważniejsze by się udało, lepiej prędzej niż później
-Czego &amp;ldquo;warto&amp;rdquo; się uczyć? (to pytanie zawsze się wszędzie pojawia i ludziom trudno zrozumieć, że jest ono źle stawiane) . - Nigdy nie kierowałem się tym, że da się na tym zarobić. Chciałem robić co lubię, a wtedy kasa powinna sama przyjść.&lt;/p&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Pytania o CV i rozmowę:&lt;/span&gt;
-Jak wyglądała rozmowa? - miałem zadanie do zrobienia, skonsumowanie webservices i operować nimi lokalnie. Później pogadanka techniczna. Na pewno było coś z SQL
-Jakieś testy, zadania? - jw
-Miałeś jakiś projekt do pokazania w CV? - Nie miałem, robiłem jakieś banały ale ich nie wpisałem w CV
-W jakiej branży pracowałeś przed przebranżowieniem? - Logistyka, z wykształcenia ogólnie mgr inż ale 0 programowania na studiach
-Skoro wywaliłeś poprzednie doświadczenie z CV, to co w nim zostało? I co napisałeś o poprzednim doświadczeniu? - 1 linijkę, że gdzieś pracowałem te X lat
-Czy wpisywałeś czego się uczyłeś z programowania mimo, że nie miałeś w tym doświadczenia komercyjnego? - wpisałem skill matrix w skali od 1 do 5
-Sam się trochę uczę&amp;hellip; czy już czas na złożenie CV? - jak nie spróbuje to się nie dowie, a jak spróbuje i się nie uda to i tak mu da to dużo wiedzy
-A co z wymogiem wykształcenia informatycznego? - Nie wydaje się to ani trochę istotne
-Jak sobie radziłeś ze swoim wiekiem? Czy nie jesteśmy skreślani na starcie? - Chyba jednak nie. Ale postanowiłem ukryć datę urodzenia w CV :)
-Ile wysłałeś CV? - Miałem 1 rozmowę na testera, 2 na programistę. Na 3 się udało.
-Czy próbowałeś np w mailu napisać krótki LM? - miałem w swoim CV zakładkę &amp;ldquo;Cel&amp;rdquo; w którym opisałem co chcę osiągnąć
-Czy podczas swojej aplikacji wpisywałeś w CV swoje projekty i potem opowiadałeś o nich na rozmowie? - Niet
-Pisałeś, że uważasz, że niewiele umiesz. Jak to w takim razie zrobiłeś, że Twoje CV wyglądało dobrze?- Poradziłem się doradcy zawodowego rekrutującego na rynku IT
-Czy wysyłałeś CV do firm stricte pracujących w Javie/Spring/Hibernete etc, etc? - Szukałem pracy w Java
-Czy warto iść na studia informatyczne? - Na pewno coś dają, obecnie raczej nie czuję kompleksów wobec ludzi co skończyli studia
-Jak u Ciebie ze znajomością angielskiego? - ponoć jest na tyle ok, że klient chwalił ze mną komunikację
Ludzie często nie wiedzą jaki projekt zrobić dla nauki, to jest całkiem fajny zbiór dla początkujących:
&lt;a href=&#34;http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/&#34;&gt;http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;text-decoration:underline;&#34;&gt;Pytania o początek kariery:&lt;/span&gt;
-Płaca blisko średniej krajowej? - Mniej na początku, ale szybko się odbiłem, moje miasto to też nie Wawa, Krak czy Wroc, gdzie są lepsze stawki
-Jak wyglądała praca na początku?- od razu na szeroką wode, rób taski, ucz się TDD itp.
-A ile czasu obecnie poświęcasz na douczanie poza pracą? - mysle, że łącznie 1h dziennie
-Jak można pracować z rzeczami których się nie zna? frameworki. itp. ? - taka natura tego zawodu&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>