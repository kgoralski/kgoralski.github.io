<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Krzysztof Góralski</title>
    <link>https://kgoralski.github.io/post/index.xml</link>
    <description>Recent content in Posts on Krzysztof Góralski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>[Krzysztof Góralski](https://kgoralski.github.io/). Released under the MIT license&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <lastBuildDate>Fri, 30 Dec 2016 21:12:10 +0100</lastBuildDate>
    <atom:link href="https://kgoralski.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kotlin &#43; Spring Boot = Kotlinboot</title>
      <link>https://kgoralski.github.io/post/kotlinboot/</link>
      <pubDate>Fri, 30 Dec 2016 21:12:10 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/kotlinboot/</guid>
      <description>&lt;p&gt;Another day, another CRUD ;) . Inspired by one of JUG meetings decided to write another example of application.
This time it is Kotlin and Spring Boot. But it is a quick one. After checking some languages this year I think that I will spend my free time with Golang in 2017 ;)&lt;/p&gt;

&lt;p&gt;Example is here: &lt;a href=&#34;https://github.com/kgoralski/kotlin-springboot-template&#34;&gt;https://github.com/kgoralski/kotlin-springboot-template&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kotlin
Spring Boot
REST JAX-RS and Jersey Proxy Client
HATEOAS Example
Sprind Data JPA with H2 Database
Spring Data NoSQL with Apache Cassandra (from Docker for App, embedded for Tests)
Spring Data REST
Tests with Spock
Gradle Kotlin Script with multi modules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Impressions? Not much, didn&amp;rsquo;t really feel that I&amp;rsquo;m learning new language:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feels easy to adopt, but still it is a new language. So it needs learning too ;)&lt;/li&gt;
&lt;li&gt;&amp;lsquo;Better Java&amp;rsquo;? Probably we can use Kotlin like that&lt;/li&gt;
&lt;li&gt;Less boilerplate&lt;/li&gt;
&lt;li&gt;Null safety&lt;/li&gt;
&lt;li&gt;Immutability&lt;/li&gt;
&lt;li&gt;Data Class! Better than Lombok :)&lt;/li&gt;
&lt;li&gt;Gotta watchout on empty constructors while using Java Frameworks (Jackson etc.)&lt;/li&gt;
&lt;li&gt;Intellij IDEA can convert Java to Kotlin&lt;/li&gt;
&lt;li&gt;Constructor Injection Preference&lt;/li&gt;
&lt;li&gt;Less annotations?&lt;/li&gt;
&lt;li&gt;Gradle Kotlin Script - love IDEA code completion (but you need to update Kotlin Plugin for that)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I guess that after some learning time developers will be able to be more productive with Kotlin.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ratpack</title>
      <link>https://kgoralski.github.io/post/ratpack/</link>
      <pubDate>Mon, 17 Oct 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/ratpack/</guid>
      <description>&lt;p&gt;So, I heard that Java is not only about Spring or Java EE  :) There are also: Ratpack, &lt;a href=&#34;https://github.com/orefalo/lagom-sample-bank&#34;&gt;Lagom&lt;/a&gt;, &lt;a href=&#34;https://github.com/prajwalan/sparkjava-restapi-crud&#34;&gt;SparkJava&lt;/a&gt;, Akka&amp;hellip;Below, you will find great informations about Ratpack :) Check &lt;a href=&#34;http://salerno-rafael.blogspot.com/2016/08/ratpack-event-driven-framework-base-on.html&#34;&gt;this&lt;/a&gt; first.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Ratpack’s goals from &lt;a href=&#34;https://ratpack.io/manual/current/intro.html#goals&#34;&gt;docs &lt;/a&gt; are:
&lt;ol&gt;
    &lt;li&gt;To be fast, scalable, and efficient (Ratpack server  is up in 1 second)&lt;/li&gt;
    &lt;li&gt;To allow applications to evolve in complexity without compromise&lt;/li&gt;
    &lt;li&gt;To leverage the benefits of non-blocking programming and reduce the costs&lt;/li&gt;
    &lt;li&gt;To be flexible and unopinionated when it comes to integrating other tools and libraries&lt;/li&gt;
    &lt;li&gt;To allow applications to be easily and thoroughly tested&lt;/li&gt;
&lt;/ol&gt;
Ratpacks’s goals are &lt;strong&gt;not&lt;/strong&gt;:
&lt;ol&gt;
    &lt;li&gt;To be a fully integrated, “full stack” solution&lt;/li&gt;
    &lt;li&gt;Provide every feature you might need in a neat box&lt;/li&gt;
    &lt;li&gt;To provide an architecture or framework for “business logic”&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;When to use Ratpack?&lt;/div&gt;
&lt;ul&gt;
    &lt;li&gt;Micro-services&lt;/li&gt;
    &lt;li&gt;High-througthput apps&lt;/li&gt;
    &lt;li&gt;Lightweight apps&lt;/li&gt;
    &lt;li&gt;Cloud Deployments&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
Resources:
&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;https://danhyun.github.io/2016-jeeconf-rapid-ratpack-java/&#34;&gt;Rapid Java Web Application Development with Ratpack&lt;/a&gt; + &lt;a href=&#34;https://github.com/danhyun/2016-jeeconf-rapid-ratpack-java&#34;&gt;github&lt;/a&gt; + &lt;a href=&#34;https://www.youtube.com/watch?v=2p3IO39BK1k&#34;&gt;video&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gSL0OSCQcsY&#34;&gt;Devoxx Poland 2016 - Laurent Doguin - A practical RxJava example with Ratpack&lt;/a&gt; +&lt;a href=&#34;https://github.com/ldoguin/ratpack-couchbase-repository-sample&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.couchbase.com/2016/april/crud-rest-api-couchbase-rxjava-ratpack&#34;&gt;A CRUD REST API with Couchbase, RxJava and Ratpack&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/danhyun/modern-java-web&#34;&gt;Modern Java Web&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://ratpack.io/manual/current/spring.html&#34;&gt;Ratpack &amp;amp; Spring Boot&lt;/a&gt; and &lt;a href=&#34;https://www.infoq.com/articles/Ratpack-and-Spring-Boot&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/mobile/SpringCentral/high-performance-microservices-with-ratpack-and-spring-boot-64889596&#34;&gt;Sping &amp;amp; Ratpack Slideshare&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Great post &lt;a href=&#34;http://salerno-rafael.blogspot.com/2016/08/ratpack-event-driven-framework-base-on.html&#34;&gt;About Ratpack&lt;/a&gt; by Rafael Salerno&lt;/li&gt;
    &lt;li&gt;Testing [&lt;a href=&#34;https://github.com/danhyun/2016-greach-testing-ratpack-applications&#34;&gt;1&lt;/a&gt;], [&lt;a href=&#34;http://alvarosanchez.github.io/ratpack-101/#_testing_ratpack_applications_with_spock_20_minutes&#34;&gt;2&lt;/a&gt;],[&lt;a href=&#34;https://danhyun.github.io/2016-gr8confus-testing-ratpack-apps/&#34;&gt;3&lt;/a&gt;]&lt;/li&gt;
    &lt;li&gt;Often &lt;a href=&#34;http://www.jooq.org/why-jOOQ.pdf&#34;&gt;jOOQ &lt;/a&gt;is used with Ratpack, instead of Hibernate.&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go Language - First Impressions</title>
      <link>https://kgoralski.github.io/post/go-impressions/</link>
      <pubDate>Sun, 04 Sep 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/go-impressions/</guid>
      <description>&lt;p&gt;Just wrote something small with Go Language. Simple CRUD/webservice with MySQL using gorilla mux and sqlx, but it is almost plain golang in dockerized environment. If anything wrong about it, tell me. If you know polish language you can check also this link: &lt;a href=&#34;http://www.consdata.pl/blog/12-pirewsze-kroki-z-golang&#34;&gt;http://www.consdata.pl/blog/12-pirewsze-kroki-z-golang&lt;/a&gt; ;)&lt;/p&gt;

&lt;p&gt;Here are my impressions about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it feels pragmatic from the beginning&lt;/li&gt;
&lt;li&gt;probably you don’t need any frameworks at all to use it&lt;/li&gt;
&lt;li&gt;simpler = better, simplicity as a feature&lt;/li&gt;
&lt;li&gt;quite easy to write REST application&lt;/li&gt;
&lt;li&gt;the build in package manager ‘go get’ is cool thing&lt;/li&gt;
&lt;li&gt;compilation &amp;amp; running time of go server is much faster than java&lt;/li&gt;
&lt;li&gt;it doesn’t eat much of resources&lt;/li&gt;
&lt;li&gt;you can use many text editors or IDEs for it (IntelliJ has Go Plugin)&lt;/li&gt;
&lt;li&gt;gofmt – one and the only code formatter&lt;/li&gt;
&lt;li&gt;designed for special needs, not for everything&lt;/li&gt;
&lt;li&gt;it is easy to find examples by googling it, good enough community&lt;/li&gt;
&lt;li&gt;return multiple values from Go functions – nice feature&lt;/li&gt;
&lt;li&gt;syntax not beautiful like Python but still good&lt;/li&gt;
&lt;li&gt;the build in ‘testing’ package – ok, but too simple (testify looks better)&lt;/li&gt;
&lt;li&gt;concurrency – believe that it is nice, but didn’t tried it yet&lt;/li&gt;
&lt;li&gt;it is much different than Scala – complexity vs simplicity&lt;/li&gt;
&lt;li&gt;I think that I could be very productive with Go if i will get used to it&lt;/li&gt;
&lt;li&gt;Docker, Kubernetes, CoreOs,  Consul, Flynn, Lime, Google, Dropbox…&lt;/li&gt;
&lt;li&gt;heard that golang is good for ‘real time apps’ – want to try it soon&lt;/li&gt;
&lt;li&gt;it seems to be good for building command-line tools&lt;/li&gt;
&lt;li&gt;it is different than Java, little bit tricky at beginning, but easy to start ;)&lt;/li&gt;
&lt;li&gt;‘good when you need to write something yourself instead of using library’&lt;/li&gt;
&lt;li&gt;need to find idea for real project, because I kinda like Go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Links:
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://danmux.com/posts/what_golang_isnt/&#34;&gt;What Golang Is and Is Not&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://jimplush.com/talk/2015/12/19/moving-a-team-from-scala-to-golang/&#34;&gt;Moving a team from Scala to Golang&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/&#34;&gt;Handling 1 Million Requests per Minute with Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://text.sourcegraph.com/google-i-o-talk-building-sourcegraph-a-large-scale-code-search-cross-reference-engine-in-go-1f911b78a82e#.jd729lgy5&#34;&gt;Sourcegraph, a large-scale code search &amp;amp; cross-reference engine in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://medium.com/@tjholowaychuk/farewell-node-js-4ba9e7f3e52b#.o6e4uex72&#34;&gt;Farewell Node.js - Leaving node.js land for Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://hashrocket.com/blog/posts/websocket-shootout&#34;&gt;Websocket Shootout: Clojure, C++, Elixir, Go, NodeJS, and Ruby&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JOx9enktnUM&#34;&gt;Go at Dropbox&lt;/a&gt; and &lt;a href=&#34;https://www.bigmarker.com/remote-meetup-go/Go-at-Dropbox&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jpetazzo/docker-and-go-why-did-we-decide-to-write-docker-in-go&#34;&gt;Here&amp;rsquo;s Why Docker Was Written in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/appleboy/write-microservice-in-golang&#34;&gt;Write microservice in golang&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://zduck.com/2014/go-and-package-versioning/&#34;&gt;Go and Package Versioning&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://allegro.tech/2016/03/writing-fast-cache-service-in-go.html&#34;&gt;allegro.tech - Writing a cache service with millions of entries in Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://eng.uber.com/go-geofence/&#34;&gt;Uber &amp;amp; Go&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/faq#What%5Fis%5Fthe%5Fpurpose%5Fof%5Fthe%5Fproject&#34;&gt;What is the purpose of Go project?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/golang/go/wiki/GoUsers&#34;&gt;GoUsers&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.itjobswatch.co.uk/jobs/uk/go.do&#34;&gt;Go UK Jobs Watch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.indeed.com/jobtrends/q-golang.html&#34;&gt;indeed job trends&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-future-of-the-Go-programming-language&#34;&gt;What is the future of the Go programming language?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.quora.com/Why-is-the-programming-language-GO-getting-so-popular-lately&#34;&gt;Why is the programming language GO getting so popular lately?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.ralch.com/tutorial/golang-performance-and-memory-analysis/&#34;&gt;Performance and memory analysis of Golang programs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.savethecode.com/racing-day-web-frameworks/&#34;&gt;Web Frameworks Benchmarks&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://opencredo.com/java-go-back/&#34;&gt;From Java to Go, and Back Again&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/golang/comments/579wsk/from_java_to_go_and_back_again/?&#34;&gt;community reaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Univocity Parsers Library</title>
      <link>https://kgoralski.github.io/post/univocity-parsers/</link>
      <pubDate>Thu, 25 Aug 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/univocity-parsers/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.univocity.com/&#34;&gt;Official Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/com.univocity/univocity-parsers&#34;&gt;Maven Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below you can find how to parse .csv file with univocity library.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class ExampleCsvToPojoParser {
   
    private final Logger logger = LoggerFactory.getLogger(CsvToPojoParser.class);
   
    public &amp;lt;T&amp;gt; List&amp;lt;T&amp;gt; parseFileToPojo(Class&amp;lt;T&amp;gt; clazz, String fileName) {
   
        BeanListProcessor&amp;lt;T&amp;gt; rowProcessor = new BeanListProcessor&amp;lt;T&amp;gt;(clazz);
   
        CsvParserSettings parserSettings = new CsvParserSettings();
   
        parserSettings.setRowProcessor(rowProcessor);
        parserSettings.setHeaderExtractionEnabled(true);
        parserSettings.setLineSeparatorDetectionEnabled(true);
        parserSettings.setSkipEmptyLines(true);
   
        CsvParser parser = new CsvParser(parserSettings);
        try (InputStream resourceAsStream = this.getClass().getClassLoader().getResourceAsStream(fileName)) {
            parser.parse(resourceAsStream);
        } catch (IOException e) {
            logger.error(&amp;quot;Cannot read file &amp;quot; + fileName, e );
        }
        return rowProcessor.getBeans();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can put there class like this (which will match the file):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Users {
   
    @Trim
    @NullString(nulls = { &amp;quot; &amp;quot;, &amp;quot;&amp;quot; })
    @Parsed(field = &amp;quot;USER_ID&amp;quot;)
    private Long userId;
    @Trim
    @NullString(nulls = { &amp;quot; &amp;quot;, &amp;quot;&amp;quot; })
    @Parsed(field = &amp;quot;USER_NAME&amp;quot;)
    private String userName;
    //getters &amp;amp; setters
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My programming books</title>
      <link>https://kgoralski.github.io/post/job-change/</link>
      <pubDate>Sun, 31 Jul 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/job-change/</guid>
      <description>&lt;p&gt;My current, unordered book list but I wasn’t able to read them all, yet.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Core Java, Volume I and II; Horstmann&lt;/li&gt;
&lt;li&gt;Thinking in Java; Eckel&lt;/li&gt;
&lt;li&gt;OCA/OCP Java SE 7 Programmer I &amp;amp; II Study Guide; Sierra &amp;amp; Bates&lt;/li&gt;
&lt;li&gt;Effective Java; Bloch&lt;/li&gt;
&lt;li&gt;Java Concurrency in Practice; Goetz&lt;/li&gt;
&lt;li&gt;Spring Boot in Action; Walls&lt;/li&gt;
&lt;li&gt;Java EE 7 Development with WildFly; Ćmil, Matłoka, Marchioni&lt;/li&gt;
&lt;li&gt;The C Programming Language; Kernighan, Ritchie&lt;/li&gt;
&lt;li&gt;The C++ Programming Language; Stroustrup&lt;/li&gt;
&lt;li&gt;Effective Modern C++; Meyers&lt;/li&gt;
&lt;li&gt;Learning Python: Powerful Object-Oriented Programming; Lutz&lt;/li&gt;
&lt;li&gt;Scala for the Impatient; Horstmann&lt;/li&gt;
&lt;li&gt;Functional Programming in Scala; Chiusano, Bjarnason&lt;/li&gt;
&lt;li&gt;Seven Languages in Seven Weeks, Tate&lt;/li&gt;
&lt;li&gt;Algorithms Unlocked, Cormen&lt;/li&gt;
&lt;li&gt;Introduction to Algorithms, Cormen&lt;/li&gt;
&lt;li&gt;Design Patterns; Gang of Four&lt;/li&gt;
&lt;li&gt;Head First, Design Patterns; Sierra, Robson, Bates &amp;amp; Freeman&lt;/li&gt;
&lt;li&gt;Clean Code; Martin&lt;/li&gt;
&lt;li&gt;The Pragmatic Programmer; Hunt&lt;/li&gt;
&lt;li&gt;The Software Craftsman: Professionalism, Pragmatism, Pride; Mancuso&lt;/li&gt;
&lt;li&gt;The Go Programming Language, Donovan &amp;amp; Kernighan&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Wildfly CRUD example with Docker</title>
      <link>https://kgoralski.github.io/post/wildfly-crud-docker/</link>
      <pubDate>Sun, 31 Jul 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/wildfly-crud-docker/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m not that familiar with pure Java EE stack. My experience is mostly mixing Java EE with Spring. So, I just wanted to play with it. You can find it here:
&lt;a href=&#34;https://github.com/kgoralski/wildfly-template&#34;&gt;&lt;a href=&#34;https://github.com/KrzysztofGoralski/wildfly-template&#34;&gt;https://github.com/KrzysztofGoralski/wildfly-template&lt;/a&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Java EE
JAX-RS - RESTEasy
Apache Deltaspike (similiar to Spring Data)
H2 Database
Docker
Maven
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is just an example and far from real application. It will be required to add tests for sure and it would be interesting to do it this way:
&lt;a href=&#34;http://blog.arungupta.me/run-javaee-tests-wildfly-docker-arquillian-cube/&#34;&gt;Docker with Arquillian Cube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install Docker first&amp;hellip; I&amp;rsquo;m using Intellij IDEA Ultimate, to add docker to this IDE:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. File-&amp;gt; Settings-&amp;gt; Builds, Executions, Deployment -&amp;gt; Clouds
2. Add Docker with API URL = unix:///var/run/docker.sock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My dockerfile is simple and using jboss/wildfly image.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;FROM jboss/wildfly
ADD target/wildfly-template.war /opt/jboss/wildfly/standalone/deployments/
RUN /opt/jboss/wildfly/bin/add-user.sh admin Admin#70365 --silent
CMD [&amp;quot;/opt/jboss/wildfly/bin/standalone.sh&amp;quot;, &amp;quot;-b&amp;quot;, &amp;quot;0.0.0.0&amp;quot;, &amp;quot;-bmanagement&amp;quot;, &amp;quot;0.0.0.0&amp;quot;]
EXPOSE 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. Run -&amp;gt; Run... -&amp;gt; Edit Configurations
2. Add Docker deployment
3. Add image tag and container name in Deployment Tab
4. Generate new container_settings.json in Container tab
5. Run it :)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Must Read: Software Craftsmanship</title>
      <link>https://kgoralski.github.io/post/software-craftsman/</link>
      <pubDate>Thu, 07 Jul 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/software-craftsman/</guid>
      <description>&lt;p style=&#34;text-align:left;&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://www.goodreads.com/book/show/18054154-software-craftsmanship&#34;&gt;by Sandro Mancuso&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img class=&#34;size-full wp-image-597 alignnone&#34; src=&#34;https://krzysztofgoralski.files.wordpress.com/2016/07/18054154.jpg&#34; alt=&#34;18054154&#34; width=&#34;270&#34; height=&#34;349&#34; /&gt;
&lt;p style=&#34;text-align:left;&#34;&gt;Really. You must read it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>akka-http-slick-guice example</title>
      <link>https://kgoralski.github.io/post/akka-http-slick-guice/</link>
      <pubDate>Tue, 03 May 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/akka-http-slick-guice/</guid>
      <description>&lt;p&gt;Forked from &lt;a href=&#34;https://github.com/knoldus/akka-http-slick&#34;&gt;https://github.com/knoldus/akka-http-slick&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Changes:
&lt;ul&gt;
    &lt;li&gt;Guice added&lt;/li&gt;
    &lt;li&gt;Changed Routes to Get, Put, Post, Delete&lt;/li&gt;
    &lt;li&gt;Changed urls&lt;/li&gt;
    &lt;li&gt;Changed Json Parser from Lift to akka-http/Spray one&lt;/li&gt;
    &lt;li&gt;Some fixes&lt;/li&gt;
&lt;/ul&gt;
Check example here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.lightbend.com/activator/template/akka-http-slick-guice&#34;&gt;https://www.lightbend.com/activator/template/akka-http-slick-guice&lt;/a&gt;
&lt;a href=&#34;https://github.com/kgoralski/akka-http-slick-guice&#34;&gt;https://github.com/kgoralski/akka-http-slick-guice&lt;/a&gt;
&lt;ul&gt;
    &lt;li&gt;akka-http : REST&lt;/li&gt;
    &lt;li&gt;slick : database access &amp;amp; relational mapping&lt;/li&gt;
    &lt;li&gt;guice: dependency injection&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hystrix &amp; Spring Boot Configuration</title>
      <link>https://kgoralski.github.io/post/hystrix-springboot/</link>
      <pubDate>Mon, 28 Mar 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/hystrix-springboot/</guid>
      <description>&lt;p&gt;Check this awesome &lt;a href=&#34;https://youtu.be/RpfQ8AHwEvg&#34;&gt;video&lt;/a&gt;. Below you can find how to configure Hystrix with Spring Boot 1.1.8 with Spring Cloud Hystrix Starter.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;compile &#39;org.springframework.cloud:spring-cloud-starter-hystrix:1.0.0.RELEASE&#39; for Spring Boot 1.1.8.
@EnableCircuitBreaker on Main/Runner class
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Register Hystrix Servlet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Configuration
public class HystrixServletDefinitions {

       @Bean(name = &amp;quot;hystrixRegistrationBean&amp;quot;)
       public ServletRegistrationBean servletRegistrationBean() {
             ServletRegistrationBean registration = new ServletRegistrationBean(
                           new HystrixMetricsStreamServlet(), &amp;quot;/metrics/hystrix.stream&amp;quot;);
             registration.setName(&amp;quot;hystrixServlet&amp;quot;);
             registration.setLoadOnStartup(1);
             return registration;
       }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Add it to Spring Security if needed: .antMatchers(&amp;ldquo;/metrics/hystrix.stream&amp;rdquo;).permitAll()&lt;/li&gt;
&lt;li&gt;Create config.properties file like this  + check docs&lt;/li&gt;
&lt;li&gt;Create defaultMethod which will be used when CircuitBreaker will open:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public List&amp;lt;SampleObject&amp;gt; defaultMethod() {
             return Lists.newArrayList();
       }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use annotation where you want to use it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@HystrixCommand(fallbackMethod = &amp;quot;defaultMethod&amp;quot;)
       public List&amp;lt;SampleObject&amp;gt; getRealMethod() {
             // implementation...
       }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Want cool Dashboard? Get and deploy somewhere Hystrix-Dashboard.war and target our &amp;ldquo;/metrics/hystrix.stream&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RxJava Async Rest Calls</title>
      <link>https://kgoralski.github.io/post/rxjava-async/</link>
      <pubDate>Sat, 26 Mar 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/rxjava-async/</guid>
      <description>&lt;p&gt;I’m not really sure if the code snippet below is 100% correct… Schedulers.io() is not probably the way to go ;)
I wanted to try RxJava for two Async Rest Calls with blocking at the end.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package org.rx.java.tutorial;
 
import java.util.List;
 
 
import rx.Observable;
import rx.functions.Func2;
import rx.schedulers.Schedulers;
 
public class App {
 
    public static void main(String[] args) {
        List&amp;lt;Person&amp;gt; zipped = Observable
                .zip(getObservableName(), getObservableAge(), new Func2&amp;lt;String, Integer, Person&amp;gt;() {
 
                    @Override
                    public Person call(String name, Integer age) {
                        Person person = new Person();
                        person.setName(name);
                        person.setAge(age);
                        return person;
                    }
                }).toList().toBlocking().single();
 
        zipped.stream().forEach(person -&amp;gt; {
            System.out.println(&amp;quot;[Name : &amp;quot; + person.getName() + &amp;quot;, Age : &amp;quot; + person.getAge() + &amp;quot;]&amp;quot;);
            // [Name : Maciek, Age : 18]
            // [Name : Rysiek, Age : 20]
            // [Name : Zdzichu, Age : 45]
        });
    }
 
    // Rest Call simulation,  emits entries of Lists.newArrayList(&amp;quot;Maciek&amp;quot;, &amp;quot;Rysiek&amp;quot;, &amp;quot;Zdzichu&amp;quot;);
    private static Observable&amp;lt;String&amp;gt; getObservableName() {
        return Observable.from(RestService.getNames()).subscribeOn(Schedulers.io());
 
    }
    // Rest Call simulation,  emits entries of Lists.newArrayList(18, 20, 45);
    private static Observable&amp;lt;Integer&amp;gt; getObservableAge() {
        return Observable.from(RestService.getAges()).subscribeOn(Schedulers.io());
 
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Spring &amp; Guava Cache</title>
      <link>https://kgoralski.github.io/post/spring-guava-cache/</link>
      <pubDate>Wed, 09 Mar 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/spring-guava-cache/</guid>
      <description>&lt;p&gt;Check the excellent guide &lt;a href=&#34;http://codedevstuff.blogspot.com/2015/07/add-guava-cache-to-spring-boot-to-cache.html&#34;&gt;here&lt;/a&gt; about Cache in Spring. Below you can find similar code. Also check the official &lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// compile (&#39;org.springframework:spring-context-support:4.0.7.RELEASE&#39;)
@Configuration
@EnableCaching
public class CacheConfig implements CachingConfigurer {
 
    public final static String CACHE = &amp;quot;cache&amp;quot;;
 
    private static final Logger LOGGER = LoggerFactory.getLogger(CacheConfig.class);
 
    @Bean
    @Override
    public CacheManager cacheManager() {
        LOGGER.info(&amp;quot;Initializing simple Guava Cache manager.&amp;quot;);
        SimpleCacheManager cacheManager = new SimpleCacheManager();
        GuavaCache discoveryCache = new GuavaCache(CACHE,
                CacheBuilder.newBuilder().expireAfterWrite(60, TimeUnit.MINUTES).build());
        cacheManager.setCaches(Arrays.asList(discoveryCache));
        return cacheManager;
    }
 
    @Bean
    @Override
    public KeyGenerator keyGenerator() {
        return new SimpleKeyGenerator();
    }
 
}
// mark method with @Cacheable annotation
@Component
public class CacheService {
 
    @Inject
    private BooksService bookService;
 
    @Cacheable(CacheConfig.CACHE)
    public List&amp;lt;Book&amp;gt; getBooks() {
        return bookService.getBooks();
    }
}
 
// You can clear cache like this
@Controller
@RequestMapping(&amp;quot;/&amp;quot;)
public class ClearCacheController {
 
    @CacheEvict(value = CacheConfig.CACHE, allEntries = true)
    @RequestMapping(value = &amp;quot;/clearCache&amp;quot;, method = RequestMethod.GET)
    public ResponseEntity&amp;lt;String&amp;gt; clearCache() {
        return new ResponseEntity&amp;lt;String&amp;gt;(&amp;quot;Cache Cleared&amp;quot;, HttpStatus.OK);
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RxJava Basics</title>
      <link>https://kgoralski.github.io/post/rxjava-basics/</link>
      <pubDate>Sun, 28 Feb 2016 10:35:47 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/rxjava-basics/</guid>
      <description>&lt;p&gt;Inspired by &lt;a href=&#34;http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/&#34;&gt;Grokking RxJava Tutorial&lt;/a&gt; check the code snippet below, in this post or check it here &lt;a href=&#34;http://pastebin.com/9MR4k5E5&#34;&gt;http://pastebin.com/9MR4k5E5&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package org.rx.java.tutorial;

import java.util.ArrayList;
import java.util.List;

import rx.Observable;
import rx.Subscriber;
import rx.functions.Func1;

public class Main {

	// Check this tutorial:
	// http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/

	// Dependency for gradle project:
	// compile &#39;io.reactivex:rxjava:1.1.1&#39;

	// ====================================================================

	// Key idea #1: Observable and Subscriber can do anything.

	// Key idea #2: The Observable and Subscriber are independent of the
	// transformational steps in between them.

	// Key idea #3: Operators let you do anything to the stream of data. The
	// only limit is yourself.

	// ====================================================================

	// Notes:
	// 1. onError() is called if an Exception is thrown at any time.
	// 2. The operators don&#39;t have to handle the Exception.
	// 3. You know when the Subscriber has finished receiving items.
	// 4. When you call Observable.subscribe(), it returns a Subscription.
	// 5. RxJava has awesome docs / marble diagrams inside code
	// 6. using unsubscribe will terminate wherever it is currently executing
	// code
	// 7. List of operators:
	// https://github.com/ReactiveX/RxJava/wiki/Alphabetical-List-of-Observable-Operators

	public static void main(String[] args) {

		// 1. verbose example
		Observable&amp;lt;String&amp;gt; myObservable = Observable.create(new Observable.OnSubscribe&amp;lt;String&amp;gt;() {
			public void call(Subscriber&amp;lt;? super String&amp;gt; sub) {
				sub.onNext(extracted());
				sub.onCompleted();
			}

			private String extracted() {
				return &amp;quot;1. Hello, world!&amp;quot;;
			}
		});

		Subscriber&amp;lt;String&amp;gt; mySubscriber = new Subscriber&amp;lt;String&amp;gt;() {
			public void onCompleted() {
				System.out.println(&amp;quot;1. the end&amp;quot;);
			}

			public void onError(Throwable e) {
				System.out.println(&amp;quot;error&amp;quot;);
			}

			public void onNext(String s) {
				System.out.println(s);
			}
		};
		myObservable.subscribe(mySubscriber);

		// 2. almost same thing as above
		Observable.just(&amp;quot;2. Hello, world!&amp;quot;).subscribe(s -&amp;gt; System.out.println(s + &amp;quot;-Krzysztof&amp;quot;));

		// 3. map operator - transforming
		Observable.just(&amp;quot;3. Hello, world!&amp;quot;).map(s -&amp;gt; s + &amp;quot;-Krzysztof&amp;quot;)
				.subscribe(s -&amp;gt; System.out.println(s));
				// http://reactivex.io/documentation/operators/map.html

		// 4. subscriber receive Integer
		Observable.just(&amp;quot;4. Hello, world!&amp;quot;).map(s -&amp;gt; s.hashCode())
				.subscribe(i -&amp;gt; System.out.println(&amp;quot;4. &amp;quot; + Integer.toString(i)));

		// 5. subscriber shouldn&#39;t have much logic so...
		Observable.just(&amp;quot;5. Hello, world!&amp;quot;).map(s -&amp;gt; s.hashCode()).map(i -&amp;gt; Integer.toString(i))
				.subscribe(s -&amp;gt; System.out.println(&amp;quot;5. &amp;quot; + s));

		// 6. some transformations
		Observable.just(&amp;quot;6. Hello, world!&amp;quot;).map(s -&amp;gt; s + &amp;quot; -Krzysztof&amp;quot;).map(s -&amp;gt; s.hashCode())
				.map(i -&amp;gt; Integer.toString(i)).subscribe(s -&amp;gt; System.out.println(&amp;quot;6. &amp;quot; + s));

		List&amp;lt;String&amp;gt; arrayList = new ArrayList&amp;lt;String&amp;gt;();
		arrayList.add(&amp;quot;Krzysztof&amp;quot;);
		arrayList.add(&amp;quot;Karol&amp;quot;);
		arrayList.add(&amp;quot;Irek&amp;quot;);

		// 7. from operator emits one element each time
		Observable.just(arrayList).subscribe(names -&amp;gt; {
			Observable.from(names).subscribe(name -&amp;gt; System.out.println(&amp;quot;7. Name: &amp;quot; + name));
		});
		// http://reactivex.io/documentation/operators/from.html

		// 8. list observable transformed into observable which emits single
		// result with after change name, filtering and taking entry at the end
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; !&amp;quot;Karol is awesome&amp;quot;.equals(nameChange)).take(1)
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;8. &amp;quot; + result + &amp;quot;- this is the result&amp;quot;));
				// http://reactivex.io/documentation/operators/flatmap.html

		// 9. doOnNext() allows us to add extra behavior each time an item is
		// emitted, in this case singing &#39;lalala&#39;
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; !&amp;quot;Irek is awesome&amp;quot;.equals(nameChange)).take(1)
				.doOnNext(nameChange -&amp;gt; System.out.println(&amp;quot;9. lalalla&amp;quot;))
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;9. &amp;quot; + result + &amp;quot;- this is the result&amp;quot;));
				// http://reactivex.io/documentation/operators/filter.html
				// http://reactivex.io/RxJava/javadoc/rx/Observable.html#doOnNext(rx.functions.Action1)

		// 10. error example
		Observable.just(arrayList).flatMap(names -&amp;gt; Observable.from(names))
				.flatMap(name -&amp;gt; Observable.just(name + &amp;quot; is awesome&amp;quot;))
				.filter(nameChange -&amp;gt; getError(nameChange).equals(&amp;quot;anything&amp;quot;)).take(1)
				.doOnNext(nameChange -&amp;gt; System.out.println(&amp;quot;10. lalalla&amp;quot;))
				.onErrorReturn(new Func1&amp;lt;Throwable, String&amp;gt;() {
					@Override
					public String call(Throwable t) {
						return &amp;quot;error&amp;quot;;
					}
				})
				.subscribe(result -&amp;gt; System.out.println(&amp;quot;10. &amp;quot; + result + &amp;quot; - this is the result&amp;quot;));

		// 11. Schedulers: easy threading
		// myObservableServices.retrieveImage(url)
		// .subscribeOn(Schedulers.io())
		// .observeOn(AndroidSchedulers.mainThread())
		// .subscribe(bitmap -&amp;gt; myImageView.setImageBitmap(bitmap));

		// subscribeOn(Scheduler scheduler): Asynchronously subscribes Observers
		// to this Observable on the specified Scheduler.

		// observeOn(Scheduler scheduler): Modifies an Observable to perform its
		// emissions and notifications on a specified Scheduler, asynchronously
		// with a bounded buffer.

		// check: http://reactivex.io/documentation/operators/subscribeon.html

	}

	private static String getError(String name) {
		throw new RuntimeException();
	}

	// OUTPUT:
	// 1. Hello, world!
	// 1. the end
	// 2. Hello, world!-Krzysztof
	// 3. Hello, world!-Krzysztof
	// 4. -1028118321
	// 5. -1538652498
	// 6. -1846029788
	// 7. Name: Krzysztof
	// 7. Name: Karol
	// 7. Name: Irek
	// 8. Krzysztof is awesome- this is the result
	// 9. lalalla
	// 9. Krzysztof is awesome- this is the result
	// 10. error - this is the result

}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Reactive Programming - Learning Resources</title>
      <link>https://kgoralski.github.io/post/reactive-resources/</link>
      <pubDate>Fri, 19 Feb 2016 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/reactive-resources/</guid>
      <description>&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.reactivemanifesto.org/&#34;&gt;Manifesto&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&#34;&gt;Nice article about Reactive Programming&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://rxmarbles.com/&#34;&gt;Rx marbles &lt;/a&gt; - diagrams (better than docs)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://reactivex.io/&#34;&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://reactivex.io/tutorials.html&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BujWQSjtpl&#34;&gt;Fast Overview&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_t06LRX0DV0&#34;&gt;Reactive Programming with RxJava (Netflix)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aEuNBk1b5OE#t=2480&#34;&gt;Meetup with Netflix&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J8n8j0_6wYU&amp;list=PLVT0blg4rCWAACyuDZKEn1cy1CR4zhz4R&amp;index=13&#34;&gt;Reactive Streams (Akka + JS)&lt;/a&gt; - Boiling Frogs 2016 (PL)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LrPBHADuGuw&amp;list=PLVbNBx5Phg3Ct6pIPeWpOW37OH7F8hcMO&amp;index=14&#34;&gt;RxJava &amp; Hystrix&lt;/a&gt; -  Confitura 2015 (PL)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-main-differences-between-Akka-and-RxJava&#34;&gt;RxJava vs Akka&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/&#34;&gt;Grokking RxJava &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/Froussios/Intro-To-RxJava&#34;&gt;Intro to RxJava&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.coursera.org/course/reactive&#34;&gt;Principles of Reactive Programming&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/rxjava-part-1-a-quick-introduction&#34;&gt;A Quick Introduction to RxJava&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/ReactiveX/RxJava/wiki/Additional-Reading&#34;&gt;Additional Reading&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Scala Learning Resources</title>
      <link>https://kgoralski.github.io/post/scala-sources/</link>
      <pubDate>Tue, 29 Sep 2015 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/scala-sources/</guid>
      <description>&lt;p&gt;So&amp;hellip; I know a little bit of Groovy language, but only a little ;) Mostly used with Gradle or with Spock Framework. But, I decided to learn Scala&amp;hellip;first (instead of Groovy) language to learn new paradigm - functional programming. Didn&amp;rsquo;t tried Scala yet, but I gathered some nice learning resources, so I can share it :)&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;http://docs.scala-lang.org/tutorials/?_ga=1.129674892.126527232.1440869235&#34;&gt;Official Scala Docs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://docs.scala-lang.org/tutorials/scala-for-java-programmers.html&#34;&gt;Scala Tutorial for Java Programmers&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://eed3si9n.com/learning-scalaz/&#34;&gt;Learning Scalaz&lt;/a&gt; - Scalaz by eed3si9n.com&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/scalaz/scalaz&#34;&gt;Examples, Tests, Code&lt;/a&gt; - Scalaz&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/milessabin/shapeless&#34;&gt;Generic programming for Scala&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.coursera.org/course/progfun&#34;&gt;Functional Programming Principles in Scala&lt;/a&gt; - www.coursera.org by by Martin Odersky&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://scalatutorials.com/&#34;&gt;http://scalatutorials.com&lt;/a&gt; - with online interpreter available&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.scala-tour.com/&#34;&gt;http://www.scala-tour.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://scala-exercises.47deg.com/&#34;&gt;Scala Exercises&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://scalaforfunandprofit.com/why-use-fsharp/&#34;&gt;Why use Scala?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://twitter.github.io/scala_school/&#34;&gt;Scala School&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.codecommit.com/blog/scala/roundup-scala-for-java-refugees&#34;&gt;Scala for Java Refugees&lt;/a&gt; - Daniel Spiewak&#39;s blog&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/lauris/awesome-scala&#34;&gt;Awesome Scala&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/scala/&#34;&gt;Reddit - Scala&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://lihaoyi.github.io/post/StrategicScalaStylePrincipleofLeastPower.html&#34;&gt;Strategic Scala Style&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/databricks/scala-style-guide#naming&#34;&gt;Scala Style Guide&lt;/a&gt; by rxin&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://docs.scala-lang.org/style/&#34;&gt;Scala Style Guide&lt;/a&gt; by official docs&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/lauris/awesome-scala&#34;&gt;Awesome Scala&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Books:
&lt;ol&gt;
    &lt;li&gt;Functional Programming in Scala - Paul Chiusano &amp; Rúnar Bjarnason&lt;/li&gt;
    &lt;li&gt;Programming in Scala - Martin Odersky&lt;/li&gt;
    &lt;li&gt;Scala for the Impatient - Cay S. Horstmann&lt;/li&gt;
    &lt;li&gt;Scala in Depth - Joshua D. Suereth&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.scala-lang.org/download/&#34;&gt;Download Scala Here&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;IDE:
&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;http://scala-ide.org/&#34;&gt;Scala IDE&lt;/a&gt; - Eclipse based&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/?id=1347&#34;&gt;Scala Plugin for IntelliJ IDEA&lt;/a&gt; - check it &lt;a href=&#34;http://blog.jetbrains.com/scala/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Learning Resources For Beginners</title>
      <link>https://kgoralski.github.io/post/beginners-resources/</link>
      <pubDate>Tue, 01 Sep 2015 08:41:23 +0100</pubDate>
      
      <guid>https://kgoralski.github.io/post/beginners-resources/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;text-decoration:underline;&#34;&gt;How to pick your first programming language?&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;Check this &lt;a href=&#34;http://gynvael.coldwind.pl/?id=238&amp;lang=pl&#34;&gt;guide&lt;/a&gt; by Gynvael Coldwind (polish)&lt;/li&gt;
    &lt;li&gt;4programmers.net got good &lt;a href=&#34;http://4programmers.net/Z_pogranicza/FAQ/Jaki_j%C4%99zyk_programowania_wybra%C4%87&#34;&gt;guide&lt;/a&gt; too (polish)&lt;/li&gt;
    &lt;li&gt;Do you like &lt;a href=&#34;http://carlcheo.com/startcoding&#34;&gt;infographics&lt;/a&gt;? ;)&lt;/li&gt;
    &lt;li&gt;My suggestions: Python, Java or C#&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;text-decoration:underline;&#34;&gt;Java Learning Resources:&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;Official &lt;a href=&#34;http://docs.oracle.com/javase/tutorial/&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.caveofprogramming.com/&#34;&gt;https://www.caveofprogramming.com/&lt;/a&gt; by John Purcell&lt;/li&gt;
    &lt;li&gt;You can find John&amp;rsquo;s tutorials on &lt;a href=&#34;https://www.udemy.com/u/johnpurcell/&#34;&gt;udemy.com&lt;/a&gt; too&lt;/li&gt;
    &lt;li&gt;CoraxTheTutor on &lt;a href=&#34;https://www.youtube.com/user/CoraxTheTutor/playlists&#34;&gt;youtube&lt;/a&gt; (polish)&lt;/li&gt;
    &lt;li&gt; &lt;a href=&#34;https://www.thenewboston.com/videos.php?cat=31&#34;&gt;The New Boston&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Get a book: Core Java, Thinking in Java or Java: A Beginner&amp;rsquo;s Guide by Herbert Schildt&lt;/li&gt;
    &lt;li&gt;Bunch of tutorials can be found, &lt;a href=&#34;http://www.javacodegeeks.com/2015/01/get-your-advanced-java-programming-degree-with-these-tutorials-and-courses.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Python Learning Resources:&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;Python official &lt;a href=&#34;https://docs.python.org/3/&#34;&gt;docs and tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.swaroopch.com/notes/python/&#34;&gt;A Byte of Python&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.diveintopython3.net/&#34;&gt;Dive Into Python&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://github.com/CodementorIO/Python-Learning-Resources&#34;&gt;Github Python Learning Resources&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.pythonchallenge.com/&#34;&gt;http://www.pythonchallenge.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://learnpythonthehardway.org/book/&#34;&gt;http://learnpythonthehardway.org&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://automatetheboringstuff.com/&#34;&gt;https://automatetheboringstuff.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Nice learning resources list can be found &lt;a href=&#34;http://www.fullstackpython.com/best-python-resources.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;You need to decide to learn 2.7 or 3.4 version - check &lt;a href=&#34;https://wiki.python.org/moin/Python2orPython3&#34;&gt;this&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Exercises:&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;http://pl.spoj.com/&#34;&gt;SPOJ&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://codingbat.com/&#34;&gt;http://codingbat.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://rosettacode.org/wiki/Category:Programming_Tasks&#34;&gt;http://rosettacode.org&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.programmr.com/&#34;&gt;http://www.programmr.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://projecteuler.net/&#34;&gt;https://projecteuler.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Project ideas:&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;1000+ Beginner Programming &lt;a href=&#34;https://www.reddit.com/r/learnprogramming/comments/2a9ygh/1000_beginner_programming_projects_xpost/&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/&#34;&gt;Martyr2&lt;/a&gt;&amp;rsquo;s Mega Project List&lt;/li&gt;
&lt;/ol&gt;
&lt;span style=&#34;text-decoration:underline;&#34;&gt;Online Learning platforms:&lt;/span&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/&#34;&gt;https://www.udemy.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.udacity.com/&#34;&gt;https://www.udacity.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.lynda.com/&#34;&gt;http://www.lynda.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.coursera.org/&#34;&gt;https://www.coursera.org/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.codecademy.com/&#34;&gt;https://www.codecademy.com/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.edx.org/&#34;&gt;https://www.edx.org/&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Heard that this is really good &lt;a href=&#34;https://www.edx.org/course/introduction-computer-science-harvardx-cs50x&#34;&gt;Introduction to Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>